{"ast":null,"code":"var _jsxFileName = \"/Users/hao/Desktop/BetterDAO/web/my-app/src/Header.js\",\n    _s = $RefreshSig$();\n\nimport './css/index.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { getWeb3 } from './utils.js';\nimport { ethers } from 'ethers';\nimport Web3 from 'web3';\nimport RockPaperScissors from './contracts/RockPaperScissors.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  const [connected, setConnected] = useState(false);\n  const [web3, setWeb3] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [tokenContract, setTokenContract] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [testValue, setTestValue] = useState(undefined);\n  const [choice, setChoice] = useState(undefined);\n  const [result, setResult] = useState(undefined); //Detect if wallet is connected\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    init();\n    window.ethereum.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    });\n  }, [accounts]);\n\n  async function init() {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    setWeb3(web3);\n    setAccounts(accounts);\n\n    if (accounts === null) {\n      console.log(\"wallet null\");\n    } else if (accounts.length === 0) {\n      console.log(\"wallet length = 0\");\n    }\n\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = RockPaperScissors.networks[networkId];\n    const contract = new web3.eth.Contract(RockPaperScissors.abi, \"0x9b154439b7351E8d347f66844D19796C2eF81F5E\"); // const contract = new web3.eth.Contract(\n    //     RockPaperScissors.abi,\n    //     deployedNetwork && deployedNetwork.address,\n    // );\n\n    setContract(contract);\n    setTokenContract(tokenContract);\n  }\n\n  async function disconnect() {\n    console.log(accounts[0]);\n    console.log(accounts.length); // await window.web3.eth.currentProvider.disconnect();\n    // setConnected(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__logo\",\n        \"data-clone\": \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"header__nav\",\n        \"data-clone\": \"nav\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.better-dao.com\",\n          className: \"header__link\",\n          style: {\n            color: \"white\"\n          },\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: connected ? \"true\" : \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        style: {\n          color: \"white\"\n        },\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        href: \"#whitelist\",\n        className: \"header__btn\",\n        \"data-clone\": \"mint-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: disconnect,\n          className: \"header__btn-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header__btn-text\",\n            style: {\n              overflow: \"hidden\"\n            },\n            children: connected ? accounts : \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"assets/images/glass.png\",\n            alt: \"glass\",\n            className: \"header__btn-glass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"burgermenu\",\n        id: \"burgermenu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Header, \"0smtD3dxcHPPl+mCpm1Bl++Dcu8=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/hao/Desktop/BetterDAO/web/my-app/src/Header.js"],"names":["React","useState","useEffect","getWeb3","ethers","Web3","RockPaperScissors","Header","connected","setConnected","web3","setWeb3","undefined","contract","setContract","tokenContract","setTokenContract","accounts","setAccounts","testValue","setTestValue","choice","setChoice","result","setResult","console","log","init","window","ethereum","on","eth","getAccounts","length","networkId","net","getId","deployedNetwork","networks","Contract","abi","disconnect","color","overflow"],"mappings":"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","sourcesContent":["import './css/index.min.css';\nimport React, {useState, useEffect} from 'react';\nimport { getWeb3 } from './utils.js';\nimport {ethers} from 'ethers'\nimport  Web3 from 'web3';\nimport RockPaperScissors from './contracts/RockPaperScissors.json';\n\nfunction Header() {\n  const [connected, setConnected] = useState(false);\n\n  const [web3, setWeb3] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [tokenContract, setTokenContract] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [testValue, setTestValue] = useState(undefined);\n  const [choice, setChoice] = useState(undefined);\n  const [result, setResult] = useState(undefined);\n\n  //Detect if wallet is connected\n  useEffect(() => {\n\n    console.log(\"useEffect\");\n\n\n    init();\n\n\n\n\n    window.ethereum.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    });\n\n\n\n  }, [accounts]);\n\n   async function init()  {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n     setWeb3(web3);\n     setAccounts(accounts);\n\n     if (accounts === null){\n       console.log(\"wallet null\");\n     }else if (accounts.length === 0){\n       console.log(\"wallet length = 0\");\n     }\n\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = RockPaperScissors.networks[networkId];\n\n    const contract = new web3.eth.Contract(\n        RockPaperScissors.abi,\n        \"0x9b154439b7351E8d347f66844D19796C2eF81F5E\",\n    );\n\n     // const contract = new web3.eth.Contract(\n     //     RockPaperScissors.abi,\n     //     deployedNetwork && deployedNetwork.address,\n     // );\n\n\n    setContract(contract);\n    setTokenContract(tokenContract);\n\n  }\n\n  async function disconnect(){\n     console.log(accounts[0]);\n    console.log(accounts.length);\n     // await window.web3.eth.currentProvider.disconnect();\n     // setConnected(false);\n  }\n\n    return (\n\n      <header className=\"header\">\n        <div className=\"header__container\">\n          <div className=\"header__logo\" data-clone=\"logo\">\n\n\n          </div>\n          <nav className=\"header__nav\" data-clone=\"nav\">\n            <a href=\"https://www.better-dao.com\" className=\"header__link\" style={{color:\"white\"}}>Home</a>\n            {/*<a href=\"#rarity\" className=\"header__link\">Rarity</a>*/}\n            {/*<a href=\"#benefits\" className=\"header__link\">Benefits</a>*/}\n\n            {/*<a href=\"#roadmap\" className=\"header__link\">Roadmap</a>*/}\n          </nav>\n          <div>{connected ? \"true\" : \"false\"}</div>\n\n\n\n          <button onClick={disconnect} style={{color:\"white\"}}>Button</button>\n          <button  href=\"#whitelist\" className=\"header__btn\" data-clone=\"mint-btn\">\n              <span onClick={disconnect} className=\"header__btn-wrapper\">\n\n                  <span  className=\"header__btn-text\" style={{overflow:\"hidden\"}}>{connected ? accounts: \"Connect Wallet\"}</span>\n                <img src=\"assets/images/glass.png\" alt=\"glass\" className=\"header__btn-glass\"/>\n              </span>\n          </button>\n          <button className=\"burgermenu\" id=\"burgermenu\"></button>\n        </div>\n      </header>\n\n\n\n  );\n}\n\n\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}