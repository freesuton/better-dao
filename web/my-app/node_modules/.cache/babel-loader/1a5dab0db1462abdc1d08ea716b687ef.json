{"ast":null,"code":"var _jsxFileName = \"/Users/hao/Desktop/BetterDAO/web/my-app/src/Header.js\",\n    _s = $RefreshSig$();\n\nimport './css/index.min.css';\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { getWeb3 } from './utils.js';\nimport { ethers } from 'ethers';\nimport Web3 from 'web3';\nimport RockPaperScissors from './contracts/RockPaperScissors.json';\nimport Home from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  const [connected, setConnected] = useState(false);\n  const [web3, setWeb3] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [tokenContract, setTokenContract] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [testValue, setTestValue] = useState(undefined);\n  const [choice, setChoice] = useState(undefined);\n  const [result, setResult] = useState(undefined); //Detect if wallet status\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n\n    if (!accounts) {\n      console.log(\"wallet null\");\n      setConnected(false);\n    } else {\n      //disconnect after connected\n      if (accounts.length === 0) {\n        console.log(\"wallet length = 0\");\n        setConnected(false);\n      }\n    }\n\n    init();\n    console.log(contract);\n    window.ethereum.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    });\n  }, [accounts]);\n\n  async function init() {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    setWeb3(web3);\n    setAccounts(accounts);\n\n    if (accounts) {\n      setConnected(true);\n    }\n\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = RockPaperScissors.networks[networkId];\n    const contract = new web3.eth.Contract(RockPaperScissors.abi, \"0x9b154439b7351E8d347f66844D19796C2eF81F5E\"); // const contract = new web3.eth.Contract(\n    //     RockPaperScissors.abi,\n    //     deployedNetwork && deployedNetwork.address,\n    // );\n\n    await setContract(contract);\n    console.log(contract);\n  } //wallet connect for button\n\n\n  async function web3Connect() {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n\n      try {\n        // Request account access if needed\n        await window.ethereum.enable(); // Acccounts now exposed\n\n        setConnected(true);\n      } catch (error) {}\n    } // Legacy dapp browsers...\n    else if (window.web3) {\n      // Use Mist/MetaMask's provider.\n      const web3 = window.web3;\n      console.log(\"Injected web3 detected.\");\n    } // Fallback to localhost; use dev console port by default...\n    else {\n      const provider = new Web3.providers.HttpProvider(\"http://localhost:9545\");\n      const web3 = new Web3(provider);\n      console.log(\"No web3 instance injected, using Local web3.\");\n    }\n  }\n\n  async function walletButton() {\n    web3Connect(); // init();\n\n    if (connected === false) {\n      console.log(connected);\n      console.log(\"wallet connect false\");\n    } // console.log(accounts[0]);\n    // console.log(accounts.length);\n    // await window.web3.eth.currentProvider.disconnect();\n    // setConnected(false);\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header__logo\",\n          \"data-clone\": \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"header__nav\",\n          \"data-clone\": \"nav\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.better-dao.com\",\n            className: \"header__link\",\n            style: {\n              color: \"white\"\n            },\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: connected ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: walletButton,\n          style: {\n            color: \"white\"\n          },\n          children: \"Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          href: \"#whitelist\",\n          className: \"header__btn\",\n          \"data-clone\": \"mint-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: walletButton,\n            className: \"header__btn-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header__btn-text\",\n              style: {\n                overflow: \"hidden\"\n              },\n              children: connected ? accounts : \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"assets/images/glass.png\",\n              alt: \"glass\",\n              className: \"header__btn-glass\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"burgermenu\",\n          id: \"burgermenu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Home, {\n      conntract: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Header, \"0smtD3dxcHPPl+mCpm1Bl++Dcu8=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/hao/Desktop/BetterDAO/web/my-app/src/Header.js"],"names":["React","useState","useEffect","createContext","useContext","getWeb3","ethers","Web3","RockPaperScissors","Home","Header","connected","setConnected","web3","setWeb3","undefined","contract","setContract","tokenContract","setTokenContract","accounts","setAccounts","testValue","setTestValue","choice","setChoice","result","setResult","console","log","length","init","window","ethereum","on","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","web3Connect","enable","error","provider","providers","HttpProvider","walletButton","color","overflow"],"mappings":"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","sourcesContent":["import './css/index.min.css';\nimport React, {useState, useEffect,createContext,useContext} from 'react';\nimport { getWeb3 } from './utils.js';\nimport {ethers} from 'ethers'\nimport  Web3 from 'web3';\nimport RockPaperScissors from './contracts/RockPaperScissors.json';\nimport Home from \"./Home\";\n\nfunction Header() {\n  const [connected, setConnected] = useState(false);\n\n  const [web3, setWeb3] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [tokenContract, setTokenContract] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [testValue, setTestValue] = useState(undefined);\n  const [choice, setChoice] = useState(undefined);\n  const [result, setResult] = useState(undefined);\n\n\n\n\n  //Detect if wallet status\n  useEffect(() => {\n\n    console.log(\"useEffect\");\n\n    if (!accounts){\n      console.log(\"wallet null\");\n      setConnected(false);\n    }else {\n      //disconnect after connected\n      if (accounts.length === 0){\n        console.log(\"wallet length = 0\");\n        setConnected(false);\n      }\n    }\n    init();\n\n    console.log(contract);\n\n\n\n    window.ethereum.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    });\n\n\n\n  }, [accounts]);\n\n   async function init()  {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n     setWeb3(web3);\n     setAccounts(accounts);\n\n     if (accounts){\n       setConnected(true);\n     }\n\n\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = RockPaperScissors.networks[networkId];\n\n    const contract = new web3.eth.Contract(\n        RockPaperScissors.abi,\n        \"0x9b154439b7351E8d347f66844D19796C2eF81F5E\",\n    );\n\n     // const contract = new web3.eth.Contract(\n     //     RockPaperScissors.abi,\n     //     deployedNetwork && deployedNetwork.address,\n     // );\n\n\n    await setContract(contract);\n     console.log(contract);\n\n  }\n\n  //wallet connect for button\n  async function web3Connect() {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n        // Acccounts now exposed\n        setConnected(true);\n\n      } catch (error) {\n\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      // Use Mist/MetaMask's provider.\n      const web3 = window.web3;\n      console.log(\"Injected web3 detected.\");\n\n    }\n    // Fallback to localhost; use dev console port by default...\n    else {\n      const provider = new Web3.providers.HttpProvider(\n          \"http://localhost:9545\"\n      );\n      const web3 = new Web3(provider);\n      console.log(\"No web3 instance injected, using Local web3.\");\n\n    }\n  }\n\n  async function walletButton(){\n    web3Connect();\n    // init();\n     if (connected === false){\n       console.log(connected);\n       console.log(\"wallet connect false\")\n\n     }\n     // console.log(accounts[0]);\n    // console.log(accounts.length);\n     // await window.web3.eth.currentProvider.disconnect();\n     // setConnected(false);\n  }\n\n    return (\n      <div>\n        <header className=\"header\">\n          <div className=\"header__container\">\n            <div className=\"header__logo\" data-clone=\"logo\">\n            </div>\n            <nav className=\"header__nav\" data-clone=\"nav\">\n              <a href=\"https://www.better-dao.com\" className=\"header__link\" style={{color:\"white\"}}>Home</a>\n              {/*<a href=\"#rarity\" className=\"header__link\">Rarity</a>*/}\n              {/*<a href=\"#benefits\" className=\"header__link\">Benefits</a>*/}\n\n              {/*<a href=\"#roadmap\" className=\"header__link\">Roadmap</a>*/}\n            </nav>\n            <div>{connected ? \"true\" : \"false\"}</div>\n\n\n\n            <button onClick={walletButton} style={{color:\"white\"}}>Button</button>\n            <button  href=\"#whitelist\" className=\"header__btn\" data-clone=\"mint-btn\">\n                <span onClick={walletButton} className=\"header__btn-wrapper\">\n\n                    <span  className=\"header__btn-text\" style={{overflow:\"hidden\"}}>{connected ? accounts: \"Connect Wallet\"}</span>\n                  <img src=\"assets/images/glass.png\" alt=\"glass\" className=\"header__btn-glass\"/>\n                </span>\n            </button>\n            <button className=\"burgermenu\" id=\"burgermenu\"></button>\n          </div>\n        </header>\n        <Home conntract = {contract}/>\n      </div>\n\n  );\n}\n\n\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}