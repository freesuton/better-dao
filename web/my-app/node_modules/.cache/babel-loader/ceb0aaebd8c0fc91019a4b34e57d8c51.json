{"ast":null,"code":"var _jsxFileName = \"/Users/hao/Desktop/BetterDAO/web/my-app/src/Header.js\",\n    _s = $RefreshSig$();\n\n// import './css/index.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { getWeb3 } from './utils.js';\nimport { ethers } from 'ethers';\nimport Web3 from 'web3';\nimport RockPaperScissors from './contracts/RockPaperScissors.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  const [connected, setConnected] = useState(false);\n  const [web3, setWeb3] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [tokenContract, setTokenContract] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [testValue, setTestValue] = useState(undefined);\n  const [choice, setChoice] = useState(undefined);\n  const [result, setResult] = useState(undefined);\n  useEffect(() => {\n    disconnect(); // init();\n\n    console.log(accounts);\n    window.ethereum.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    }); // setAccounts(accounts);\n    //\n  }, []);\n\n  async function init() {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    setWeb3(web3);\n    setAccounts(accounts);\n\n    if (accounts) {\n      setConnected(true);\n      console.log(accounts);\n    } else {\n      setConnected(false);\n      console.log(accounts);\n    }\n\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = RockPaperScissors.networks[networkId];\n    const contract = new web3.eth.Contract(RockPaperScissors.abi, deployedNetwork && deployedNetwork.address); // const tokenContract = new web3.eth.Contract(\n    //     AnimalWorldCollectionABI.abi,\n    //     \"0x9b154439b7351E8d347f66844D19796C2eF81F5E\",\n    // );\n\n    setContract(contract);\n    setTokenContract(tokenContract);\n  }\n\n  async function disconnect() {\n    console.log(\"dis\"); // await window.web3.eth.currentProvider.disconnect();\n    // setConnected(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: disconnect,\n    style: {\n      color: \"white\"\n    },\n    children: \"Button\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"0smtD3dxcHPPl+mCpm1Bl++Dcu8=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/hao/Desktop/BetterDAO/web/my-app/src/Header.js"],"names":["React","useState","useEffect","getWeb3","ethers","Web3","RockPaperScissors","Header","connected","setConnected","web3","setWeb3","undefined","contract","setContract","tokenContract","setTokenContract","accounts","setAccounts","testValue","setTestValue","choice","setChoice","result","setResult","disconnect","console","log","window","ethereum","on","init","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","color"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAQC,IAAR,MAAkB,MAAlB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACW,SAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACW,SAAD,CAAxC;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAACW,SAAD,CAAlD;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAACW,SAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAACW,SAAD,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAACW,SAAD,CAApC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAACW,SAAD,CAApC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AAEduB,IAAAA,UAAU,GAFI,CAGd;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AAIAW,IAAAA,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,iBAAnB,EAAsCb,QAAQ,IAAI;AAChDC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAFD,EARc,CAWd;AACA;AAGD,GAfQ,EAeN,EAfM,CAAT;;AAiBC,iBAAec,IAAf,GAAuB;AACtB,UAAMrB,IAAI,GAAG,MAAMP,OAAO,EAA1B;AACA,UAAMc,QAAQ,GAAG,MAAMP,IAAI,CAACsB,GAAL,CAASC,WAAT,EAAvB;AACCtB,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAQ,IAAAA,WAAW,CAACD,QAAD,CAAX;;AACA,QAAGA,QAAH,EAAY;AACVR,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,KAHD,MAGM;AACJR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD;;AAEF,UAAMiB,SAAS,GAAG,MAAMxB,IAAI,CAACsB,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AACA,UAAMC,eAAe,GAAG/B,iBAAiB,CAACgC,QAAlB,CAA2BJ,SAA3B,CAAxB;AAEA,UAAMrB,QAAQ,GAAG,IAAIH,IAAI,CAACsB,GAAL,CAASO,QAAb,CACbjC,iBAAiB,CAACkC,GADL,EAEbH,eAAe,IAAIA,eAAe,CAACI,OAFtB,CAAjB,CAhBsB,CAqBtB;AACA;AACA;AACA;;AAEA3B,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AAED;;AAED,iBAAeU,UAAf,GAA2B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADwB,CAExB;AACA;AACF;;AAEC,sBACI;AAAQ,IAAA,OAAO,EAAEF,UAAjB;AAA6B,IAAA,KAAK,EAAE;AAACiB,MAAAA,KAAK,EAAC;AAAP,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAxEQnC,M;;KAAAA,M;AA4ET,eAAeA,MAAf","sourcesContent":["// import './css/index.min.css';\nimport React, {useState, useEffect} from 'react';\nimport { getWeb3 } from './utils.js';\nimport {ethers} from 'ethers'\nimport  Web3 from 'web3';\nimport RockPaperScissors from './contracts/RockPaperScissors.json';\n\nfunction Header() {\n  const [connected, setConnected] = useState(false);\n\n  const [web3, setWeb3] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [tokenContract, setTokenContract] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [testValue, setTestValue] = useState(undefined);\n  const [choice, setChoice] = useState(undefined);\n  const [result, setResult] = useState(undefined);\n\n  useEffect(() => {\n\n    disconnect();\n    // init();\n    console.log(accounts);\n\n\n\n    window.ethereum.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    });\n    // setAccounts(accounts);\n    //\n\n\n  }, []);\n\n   async function init()  {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n     setWeb3(web3);\n     setAccounts(accounts);\n     if(accounts){\n       setConnected(true);\n       console.log(accounts)\n     }else {\n       setConnected(false);\n       console.log(accounts);\n     }\n\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = RockPaperScissors.networks[networkId];\n\n    const contract = new web3.eth.Contract(\n        RockPaperScissors.abi,\n        deployedNetwork && deployedNetwork.address,\n    );\n\n    // const tokenContract = new web3.eth.Contract(\n    //     AnimalWorldCollectionABI.abi,\n    //     \"0x9b154439b7351E8d347f66844D19796C2eF81F5E\",\n    // );\n\n    setContract(contract);\n    setTokenContract(tokenContract);\n\n  }\n\n  async function disconnect(){\n     console.log(\"dis\");\n     // await window.web3.eth.currentProvider.disconnect();\n     // setConnected(false);\n  }\n\n    return (\n        <button onClick={disconnect} style={{color:\"white\"}}>Button</button>\n\n\n\n\n  );\n}\n\n\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}